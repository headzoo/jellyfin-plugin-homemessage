{
  "version": 3,
  "sources": ["../utils.ts", "../home.ts"],
  "sourcesContent": ["/**\n * Creates a new element.\n *\n * @param tagName The tag name of the element to create.\n * @param attributes The attributes to set on the element.\n */\nexport const createElement = (\n  tagName: string,\n  attributes: Record<string, string> = {},\n): HTMLElement => {\n  const el = document.createElement(tagName);\n\n  const attr = Object.assign({}, attributes);\n  if (attr.html) {\n    el.innerHTML = attr.html;\n    delete attr.html;\n  }\n\n  const keys = Object.keys(attr);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = attr[key];\n    el.setAttribute(key, value);\n  }\n\n  return el;\n};\n", "import { Message } from './@types/Message';\nimport { createElement } from './utils';\n\n(async () => {\n  const cssClassPrefix = 'home-message';\n  const { ApiClient } = window;\n\n  /**\n   * Displays a message on the home page.\n   *\n   * @param messageElements The #indexPage element.\n   * @param message The message to display.\n   */\n  const displayMessage = (messageElements: HTMLElement, message: Message) => {\n    const messageElement = createElement('div', {\n      class: `${cssClassPrefix}-message`,\n      style: `background-color: ${message.BgColor}; color: ${message.TextColor};`,\n    });\n\n    if (message.Dismissible) {\n      const btn = createElement('button', {\n        title: 'Close',\n        class: `${cssClassPrefix}-dismiss`,\n        html: '&times;',\n      });\n      btn.addEventListener('click', async () => {\n        messageElements.removeChild(messageElement);\n        const url = ApiClient.getUrl(`HomeMessage/messages/${message.Id}`);\n        await ApiClient.ajax({\n          type: 'DELETE',\n          url,\n        });\n      });\n      messageElement.appendChild(btn);\n    }\n\n    const titleElement = createElement('h3', {\n      class: `${cssClassPrefix}-title`,\n      html: message.Title,\n    });\n    messageElement.appendChild(titleElement);\n\n    const textElement = createElement('p', {\n      class: `${cssClassPrefix}-text`,\n      html: message.Text,\n    });\n    messageElement.appendChild(textElement);\n\n    messageElements.appendChild(messageElement);\n  };\n\n  /**\n   * Called when the page is ready.\n   *\n   * @param indexPage The #indexPage element.\n   */\n  const ready = async (indexPage: HTMLElement) => {\n    const messageElements = createElement('div', {\n      class: `${cssClassPrefix}-messages emby-scroller`,\n    });\n    indexPage.prepend(messageElements);\n\n    const url = ApiClient.getUrl('HomeMessage/messages');\n    const messages = await ApiClient.getJSON<Message[]>(url);\n    for (let i = 0; i < messages.length; i++) {\n      const message = messages[i];\n      displayMessage(messageElements, message);\n    }\n  };\n\n  /**\n   * Waits for the #indexPage element to be available, then calls ready().\n   */\n  const boot = async () => {\n    const indexPage = document.getElementById('indexPage');\n    if (!indexPage) {\n      setTimeout(async () => await boot(), 100);\n      return;\n    }\n\n    await ready(indexPage);\n  };\n  await boot();\n})();\n"],
  "mappings": ";;AAMO,MAAM,gBAAgB,CAC3B,SACA,aAAqC,CAAC,MACtB;AAChB,UAAM,KAAK,SAAS,cAAc,OAAO;AAEzC,UAAM,OAAO,OAAO,OAAO,CAAC,GAAG,UAAU;AACzC,QAAI,KAAK,MAAM;AACb,SAAG,YAAY,KAAK;AACpB,aAAO,KAAK;AAAA,IACd;AAEA,UAAM,OAAO,OAAO,KAAK,IAAI;AAC7B,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAM,MAAM,KAAK,CAAC;AAClB,YAAM,QAAQ,KAAK,GAAG;AACtB,SAAG,aAAa,KAAK,KAAK;AAAA,IAC5B;AAEA,WAAO;AAAA,EACT;;;ACvBA,GAAC,YAAY;AACX,UAAM,iBAAiB;AACvB,UAAM,EAAE,UAAU,IAAI;AAQtB,UAAM,iBAAiB,CAAC,iBAA8B,YAAqB;AACzE,YAAM,iBAAiB,cAAc,OAAO;AAAA,QAC1C,OAAO,GAAG,cAAc;AAAA,QACxB,OAAO,qBAAqB,QAAQ,OAAO,YAAY,QAAQ,SAAS;AAAA,MAC1E,CAAC;AAED,UAAI,QAAQ,aAAa;AACvB,cAAM,MAAM,cAAc,UAAU;AAAA,UAClC,OAAO;AAAA,UACP,OAAO,GAAG,cAAc;AAAA,UACxB,MAAM;AAAA,QACR,CAAC;AACD,YAAI,iBAAiB,SAAS,YAAY;AACxC,0BAAgB,YAAY,cAAc;AAC1C,gBAAM,MAAM,UAAU,OAAO,wBAAwB,QAAQ,EAAE,EAAE;AACjE,gBAAM,UAAU,KAAK;AAAA,YACnB,MAAM;AAAA,YACN;AAAA,UACF,CAAC;AAAA,QACH,CAAC;AACD,uBAAe,YAAY,GAAG;AAAA,MAChC;AAEA,YAAM,eAAe,cAAc,MAAM;AAAA,QACvC,OAAO,GAAG,cAAc;AAAA,QACxB,MAAM,QAAQ;AAAA,MAChB,CAAC;AACD,qBAAe,YAAY,YAAY;AAEvC,YAAM,cAAc,cAAc,KAAK;AAAA,QACrC,OAAO,GAAG,cAAc;AAAA,QACxB,MAAM,QAAQ;AAAA,MAChB,CAAC;AACD,qBAAe,YAAY,WAAW;AAEtC,sBAAgB,YAAY,cAAc;AAAA,IAC5C;AAOA,UAAM,QAAQ,OAAO,cAA2B;AAC9C,YAAM,kBAAkB,cAAc,OAAO;AAAA,QAC3C,OAAO,GAAG,cAAc;AAAA,MAC1B,CAAC;AACD,gBAAU,QAAQ,eAAe;AAEjC,YAAM,MAAM,UAAU,OAAO,sBAAsB;AACnD,YAAM,WAAW,MAAM,UAAU,QAAmB,GAAG;AACvD,eAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,cAAM,UAAU,SAAS,CAAC;AAC1B,uBAAe,iBAAiB,OAAO;AAAA,MACzC;AAAA,IACF;AAKA,UAAM,OAAO,YAAY;AACvB,YAAM,YAAY,SAAS,eAAe,WAAW;AACrD,UAAI,CAAC,WAAW;AACd,mBAAW,YAAY,MAAM,KAAK,GAAG,GAAG;AACxC;AAAA,MACF;AAEA,YAAM,MAAM,SAAS;AAAA,IACvB;AACA,UAAM,KAAK;AAAA,EACb,GAAG;",
  "names": []
}
